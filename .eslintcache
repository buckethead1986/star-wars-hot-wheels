[{"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/index.js":"1","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/reportWebVitals.js":"2","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/App.js":"3","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Container.js":"4","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Drawer.js":"5","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/GridItemsContainer.js":"6","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Searchbar.js":"7","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/DrawerList.js":"8","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsDataGrid.js":"9","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/ClickableImage.js":"10","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsShips.js":"11","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/AutoCompleteSearchbar.js":"12"},{"size":500,"mtime":1608264931061,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1608264931062,"results":"15","hashOfConfig":"14"},{"size":185,"mtime":1615109602448,"results":"16","hashOfConfig":"14"},{"size":7378,"mtime":1615459583962,"results":"17","hashOfConfig":"14"},{"size":5896,"mtime":1615454610494,"results":"18","hashOfConfig":"14"},{"size":4475,"mtime":1615457446536,"results":"19","hashOfConfig":"14"},{"size":1597,"mtime":1615288427890,"results":"20","hashOfConfig":"14"},{"size":2491,"mtime":1615459630643,"results":"21","hashOfConfig":"14"},{"size":2824,"mtime":1615276166606,"results":"22","hashOfConfig":"14"},{"size":1244,"mtime":1615107517564,"results":"23","hashOfConfig":"14"},{"size":71049,"mtime":1615364520165,"results":"24","hashOfConfig":"14"},{"size":1558,"mtime":1615449198795,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"bnegul",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"28"},"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/index.js",[],["54","55"],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/reportWebVitals.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/App.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Container.js",["56"],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Drawer.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/GridItemsContainer.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Searchbar.js",[],["57","58"],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/DrawerList.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsDataGrid.js",["59"],"import * as react from \"react\";\nimport { DataGrid } from \"@material-ui/data-grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport ClickableImage from \"./ClickableImage.js\";\n\nconst useStyles = makeStyles({\n  //Workaround to let text wrap in DataGrid cells\n  wrapTextInCell: {\n    \"& div.MuiDataGrid-cell\": {\n      whiteSpace: \"normal\"\n    }\n  }\n});\n\nexport default function StarWarsDataGrid(props) {\n  const classes = useStyles();\n\n  const columns = [\n    {\n      field: \"name\",\n      headerName: \"Name\",\n      flex: 1,\n      renderCell: params => <Typography>{params.value}</Typography> //<Typography> has own styling and renders larger\n    },\n    {\n      field: \"year\",\n      headerName: \"Year\",\n      flex: 0.4\n    },\n    { field: \"model\", headerName: \"Model\", flex: 0.4 },\n    { field: \"class\", headerName: \"Class\", flex: 0.4 },\n    {\n      field: \"faction\",\n      headerName: \"Faction\",\n      flex: 0.4,\n      renderCell: params => (\n        <Typography style={{ fontSize: \"0.9rem\" }}>{params.value}</Typography>\n      )\n    },\n    {\n      field: \"type\",\n      headerName: \"Type\",\n      flex: 0.4,\n      renderCell: params => (\n        <Typography style={{ fontSize: \"0.9rem\" }}>{params.value}</Typography>\n      )\n    },\n    {\n      field: \"special\",\n      headerName: \"Extra\",\n      flex: 0.5,\n      renderCell: params => (\n        <Typography style={{ fontSize: \"0.9rem\" }}>{params.value}</Typography>\n      )\n    },\n    {\n      field: \"src\",\n      headerName: \"Image\",\n      width: 128,\n      renderCell: params => (\n        <ClickableImage src={params.value} alt={params.getValue(\"name\")} />\n      )\n    },\n    {\n      field: \"packsrc\",\n      headerName: \"Pack Image\",\n      width: 128,\n      renderCell: params => (\n        <ClickableImage src={params.value} alt={params.getValue(\"name\")} />\n      )\n    },\n    {\n      field: \"backsrc\",\n      headerName: \"Reverse Image\",\n      width: 128,\n      renderCell: params => (\n        <ClickableImage src={params.value} alt={params.getValue(\"name\")} />\n      )\n    }\n  ];\n\n  //default height for DataGrid is 0. This is a workaround I found to enable content to load below the grid\n  // const gridWrapperRef = react.useRef(null);\n  // react.useLayoutEffect(() => {\n  //   const gridDiv = gridWrapperRef.current;\n  //   if (gridDiv) {\n  //     const gridEl: HTMLDivElement = gridDiv.querySelector(\"div\");\n  //     gridEl.style.height = \"\";\n  //   }\n  // });\n\n  return (\n    <div className={classes.wrapTextInCell}>\n      <DataGrid\n        pageSize={25}\n        rowsPerPageOptions={[25, 50, 75, 100]}\n        rows={props.filteredShips}\n        columns={columns}\n        autoHeight\n        rowHeight={128}\n        showCellRightBorder={true}\n        showColumnRightBorder={true}\n      />\n    </div>\n  );\n}\n","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/ClickableImage.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsShips.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/AutoCompleteSearchbar.js",["60","61"],"import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { starWarsShips } from \"./StarWarsShips.js\";\n\nconst useStyles = makeStyles(theme => ({\n  //   root: {\n  //     border: \"1px solid #e2e2e1\",\n  //     overflow: \"hidden\",\n  //     borderRadius: 4,\n  //     backgroundColor: \"#fcfcfb\",\n  //     transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n  //     \"&:hover\": {\n  //       backgroundColor: \"#fff\"\n  //     },\n  //     \"&$focused\": {\n  //       backgroundColor: \"#fff\",\n  //       boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n  //       borderColor: theme.palette.primary.main\n  //     }\n  //   },\n  //   focused: {}\n}));\n\nexport default function SearchBox(props) {\n  // const classes = useStyles();\n\n  return (\n    <Autocomplete\n      id=\"star-wars-searchbar\"\n      freeSolo\n      onChange={(event, value) => {\n        props.handleSearchbarData(\n          value !== null || undefined ? value.trim() : \"\"\n        );\n      }}\n      options={[...new Set(starWarsShips.map(ship => ship.name))].sort()} //Removes duplicate names, and sorts options alphabetically\n      renderInput={params => (\n        <TextField\n          // classes={{ root: classes.root }}\n          style={{\n            position: \"relative\"\n          }}\n          {...params}\n          placeholder=\"Search\"\n          margin=\"dense\"\n          variant=\"outlined\"\n        />\n      )}\n    />\n  );\n}\n",{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":100,"column":10,"nodeType":"68","messageId":"69","endLine":100,"endColumn":24},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"72","line":1,"column":13,"nodeType":"68","messageId":"69","endLine":1,"endColumn":18},{"ruleId":"66","severity":1,"message":"73","line":2,"column":10,"nodeType":"68","messageId":"69","endLine":2,"endColumn":14},{"ruleId":"66","severity":1,"message":"74","line":7,"column":7,"nodeType":"68","messageId":"69","endLine":7,"endColumn":16},"no-native-reassign",["75"],"no-negated-in-lhs",["76"],"no-unused-vars","'testShipFilter' is assigned a value but never used.","Identifier","unusedVar",["75"],["76"],"'react' is defined but never used.","'fade' is defined but never used.","'useStyles' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]