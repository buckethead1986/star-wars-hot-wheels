[{"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/index.js":"1","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/reportWebVitals.js":"2","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/App.js":"3","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Container.js":"4","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Drawer.js":"5","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/GridItemsContainer.js":"6","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Searchbar.js":"7","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/DrawerList.js":"8","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsGridItem.js":"9","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsShips.js":"10"},{"size":500,"mtime":1608264931061,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608264931062,"results":"13","hashOfConfig":"12"},{"size":185,"mtime":1609387785996,"results":"14","hashOfConfig":"12"},{"size":761,"mtime":1609302430290,"results":"15","hashOfConfig":"12"},{"size":4798,"mtime":1609558615364,"results":"16","hashOfConfig":"12"},{"size":2364,"mtime":1609459496111,"results":"17","hashOfConfig":"12"},{"size":2619,"mtime":1609459541803,"results":"18","hashOfConfig":"12"},{"size":2660,"mtime":1609458668146,"results":"19","hashOfConfig":"12"},{"size":1865,"mtime":1609302781052,"results":"20","hashOfConfig":"12"},{"size":22268,"mtime":1609652320514,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"bnegul",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"24"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/index.js",[],["46","47"],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/reportWebVitals.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/App.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Container.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Drawer.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/GridItemsContainer.js",["48"],"import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport StarWarsGridItem from \"./StarWarsGridItem.js\";\nimport { starWarsShips } from \"./StarWarsShips.js\";\nimport Paper from \"@material-ui/core/Paper\";\nimport { makeStyles } from \"@material-ui/core/Styles\";\n\n//'paper' class only used for divider, remove in final\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    textAlign: \"center\",\n    color: theme.palette.text.secondary\n  }\n}));\n\nexport default function SimpleContainer(props) {\n  const classes = useStyles();\n  console.log(\"value = \", props.value);\n\n  const makeSelectedGridItems = (\n    <Grid container>\n      {starWarsShips\n        .filter(item =>\n          item.name.toLowerCase().includes(props.value.toLowerCase())\n        )\n        .map((ship, index) => (\n          <Grid item xs={12} sm={6}>\n            <StarWarsGridItem ship={ship}>xs=12 sm=6</StarWarsGridItem>\n          </Grid>\n        ))}\n    </Grid>\n  );\n\n  const makeStarWarsGridItems = (\n    <Grid container>\n      {starWarsShips.map((ship, index) => (\n        <Grid item xs={12} sm={6}>\n          <StarWarsGridItem ship={ship}>xs=12</StarWarsGridItem>\n        </Grid>\n      ))}\n    </Grid>\n  );\n\n  return (\n    <React.Fragment>\n      <CssBaseline />\n      <Container maxWidth=\"lg\">\n        <Typography\n          component=\"div\"\n          style={{ backgroundColor: \"#cfe8fc\", height: \"100%\" }}\n        >\n          <Grid container>\n            {makeSelectedGridItems}\n            <Grid item xs={12}>\n              <Paper className={classes.paper}>Divider</Paper>\n            </Grid>\n            <Grid item xs={12}>\n              <Paper\n                style={{\n                  padding: 8,\n                  margin: 8,\n                  textAlign: \"center\",\n                  backgroundColor: \"#ccffcc\",\n                  color: \"black\"\n                }}\n              >\n                Divider\n              </Paper>\n            </Grid>\n            {makeStarWarsGridItems}\n          </Grid>\n        </Typography>\n      </Container>\n    </React.Fragment>\n  );\n}\n","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/Searchbar.js",["49"],"/* eslint-disable no-use-before-define */\nimport React from \"react\";\nimport { fade, makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport { starWarsShips } from \"./StarWarsShips.js\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    border: \"1px solid #e2e2e1\",\n    overflow: \"hidden\",\n    borderRadius: 4,\n    backgroundColor: \"#fcfcfb\",\n    transition: theme.transitions.create([\"border-color\", \"box-shadow\"]),\n    \"&:hover\": {\n      backgroundColor: \"#fff\"\n    },\n    \"&$focused\": {\n      backgroundColor: \"#fff\",\n      boxShadow: `${fade(theme.palette.primary.main, 0.25)} 0 0 0 2px`,\n      borderColor: theme.palette.primary.main\n    }\n  },\n  focused: {}\n}));\n\nconst searchbarRegex = string => {\n  //tests search input against regex for common mispellings of X-Wing, Y-Wing, AT-AT, etc.\n  let lowerCaseString = string !== undefined ? string.toLowerCase() : \"\";\n  let variable = lowerCaseString.substring(0, 1);\n  let regexChecker = dynamicRegexCreator(lowerCaseString, variable);\n  const atst = /^at.?st/;\n  const atat = /^at.?at/; //simplified version of below with string set to lowercase\n  // const atat = /^[Aa][Tt].?[Aa][Tt]/ //matches misspellings of AT-AT. Capital or lowercase 'AT's, with any character or no character in between\n  if (regexChecker.test(lowerCaseString)) {\n    let substring = variable + \"-wing\";\n    return substring;\n  } else if (atst.test(lowerCaseString)) {\n    return \"at-st\";\n  } else if (atat.test(lowerCaseString)) {\n    return \"at-at\";\n  } else {\n    return lowerCaseString;\n  }\n};\n\n//makes regex for x, y, b, u, a-wing misspellings: xwing, x=wing, x wing, etc.\nconst dynamicRegexCreator = (lowerCaseString, variable) => {\n  const regex = new RegExp(\"^\" + variable + \".?w\");\n  return regex;\n};\n\nexport default function SearchBox(props) {\n  const classes = useStyles();\n  // const theme = useTheme();\n\n  return (\n    <Autocomplete\n      id=\"free-solo-demo\"\n      freeSolo\n      onChange={(event, value) => {\n        props.handleSearchbarData(searchbarRegex(value));\n      }}\n      options={starWarsShips.map(ship => ship.name)}\n      renderInput={params => (\n        <div>\n          <TextField\n            classes={{ root: classes.root }}\n            style={{\n              width: 300, //remove width parameter for searchbar inside drawer\n              position: \"relative\"\n            }}\n            {...params}\n            placeholder=\"Search\"\n            margin=\"dense\"\n            variant=\"outlined\"\n          />\n        </div>\n      )}\n    />\n  );\n}\n","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/DrawerList.js",["50"],"import React from \"react\";\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Collapse from \"@material-ui/core/Collapse\";\nimport ExpandLess from \"@material-ui/icons/ExpandLess\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport MailIcon from \"@material-ui/icons/Mail\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\n\nconst useStyles = makeStyles(theme => ({\n  nested: {\n    paddingLeft: theme.spacing(4)\n  }\n}));\n\nexport default function DrawerList(props) {\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n  const [checked, setChecked] = React.useState([]);\n\n  const handleOpen = () => {\n    setOpen(!open);\n  };\n\n  const handleToggle = (item, value) => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n    props.handleDrawerData(item);\n  };\n\n  const makeListItems = (\n    <List>\n      {props.list.map((item, index) => {\n        const labelId = `checkbox-list-secondary-label-${index}`;\n        return (\n          <ListItem\n            button\n            onClick={event => props.handleDrawerData(item)}\n            key={item}\n            className={classes.nested}\n          >\n            <ListItemIcon>\n              {index % 2 === 0 ? <InboxIcon /> : <MailIcon />}\n            </ListItemIcon>\n            <ListItemText primary={item} />\n            <ListItemSecondaryAction>\n              <Checkbox\n                edge=\"end\"\n                onChange={handleToggle(item, index)}\n                checked={checked.indexOf(index) !== -1}\n                inputProps={{ \"aria-labelledby\": labelId }}\n              />\n            </ListItemSecondaryAction>\n          </ListItem>\n        );\n      })}\n    </List>\n  );\n\n  return (\n    <List component=\"div\" disablePadding>\n      <ListItem button onClick={handleOpen}>\n        <ListItemIcon>\n          <InboxIcon />\n        </ListItemIcon>\n        <ListItemText primary={props.primary} />\n        {open ? <ExpandLess /> : <ExpandMore />}\n      </ListItem>\n      <Collapse in={open} timeout=\"auto\" unmountOnExit>\n        {makeListItems}\n      </Collapse>\n    </List>\n  );\n}\n","/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsGridItem.js",[],"/Users/robertpeck/Development/code/react_labs/star-wars-hot-wheels/src/components/StarWarsShips.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":6,"column":8,"nodeType":"58","messageId":"59","endLine":6,"endColumn":15},{"ruleId":"56","severity":1,"message":"60","line":3,"column":28,"nodeType":"58","messageId":"59","endLine":3,"endColumn":36},{"ruleId":"56","severity":1,"message":"61","line":23,"column":9,"nodeType":"58","messageId":"59","endLine":23,"endColumn":14},{"ruleId":"62","severity":1,"message":"63","line":952,"column":1,"nodeType":"64","endLine":952,"endColumn":34},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"no-unused-vars","'Divider' is defined but never used.","Identifier","unusedVar","'useTheme' is defined but never used.","'theme' is assigned a value but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]